
digraph Makerspace {
    // Entities
    node [fillcolor="#F0D0D0", style=filled, shape=record];
    Visitor [label="{Makerspace | Visitor}"];
    Employee [label="{Makerspace | Student Employee}"]

    // Frontend
    node [fillcolor="#D0F0D0", style=filled, shape=record];
    OnSiteConsole [label="Browser | (on-site)"];
    VisitsCloudFront [label="Amazon\nCloudFront | Visitor Signin"];
    PersonalBrowser [label="Browser | (personal device)"];
    MaintenanceCloudFront [label="Amazon\nCloudFront | Maintenance Manager"];

    // Backend
    node [fillcolor="#F0F0D0", style=filled, shape=record];
    VisitsS3 [label="Amazon S3 | Visitors\nConsole Source"]
    VisitsLambda [label="AWS\nLambda | (RgisterVisit)"];
    VisitsApiGateway [label="APIGateway"];
    MaintenanceS3 [label="Amazon S3 | Maintenance App Source"];
    MaintenanceLambda [label="AWS\nLambda(s) | (MaintenanceTask)"]
    MaintApiGateway [label="APIGateway"];

    // Database
    node [fillcolor="#D0D0F0", style=filled, shape=oval];
    DynamoDB [label="DynamoDB\nSingle-Table"];

    // External systems
    node [fillcolor="#D0D0D0", style=filled, shape=oval];
    EmployeeCognito [label="Amazon Cognito\nEmployee Authentication"];

    // Inter-component relationships
    Employee -> PersonalBrowser;
    Visitor -> OnSiteConsole;
    VisitsCloudFront -> EmployeeCognito;
    MaintenanceCloudFront -> EmployeeCognito;

    VisitsLambda -> DynamoDB;
    MaintenanceLambda -> DynamoDB;


    // Visits Lambda
    subgraph cluster1 {
        label="Visits Lambda";

        OnSiteConsole -> VisitsCloudFront;
        VisitsCloudFront -> VisitsS3;

        OnSiteConsole -> VisitsApiGateway;
        VisitsApiGateway -> VisitsLambda;
    }

    // Maintenance App
    subgraph cluster2 {
        label="Maintenance App";

        PersonalBrowser -> MaintenanceCloudFront;
        MaintenanceCloudFront -> MaintenanceS3;

        PersonalBrowser -> MaintApiGateway;
        MaintApiGateway -> MaintenanceLambda;
    }
}