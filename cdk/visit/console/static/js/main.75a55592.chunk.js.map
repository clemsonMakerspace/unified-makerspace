{"version":3,"sources":["components/ModeSelect/ModeSelect.js","components/UserForm/UserForm.js","components/SignInCountDown/SignInCountDown.js","components/App/App.js","index.js"],"names":["ModeSelect","props","className","style","width","onClick","handleClemsonUser","handleGuestUser","UserForm","render","placeholder","errorMessage","useState","userName","setUserName","inputError","setInputError","isLoading","setIsLoading","mode","STATES","onSubmit","event","trim","param","username","fetch","method","body","JSON","stringify","then","response","ok","json","data","status","Error","obj","handleSignInMessage","catch","error","preventDefault","type","value","onChange","target","handleBack","SignInCountDown","date","Date","now","renderer","seconds","onComplete","on","MAIN","CLEMSON","GUEST","SIGN_IN","FAILED_SIGN_IN","App","appMode","setAppMode","isIn","height","document","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.75a55592.chunk.js","sourcesContent":["import React from 'react';\n\nconst ModeSelect = (props) => (\n  <div>\n      <button className=\"btn-lg btn-secondary mb-3 d-block\" \n      style={{width: '250px'}} \n      onClick={props.handleClemsonUser}>Clemson User</button>\n      \n      <button className=\"btn-lg btn-accent mb-3 d-block\" \n      style={{width: '250px'}} \n      onClick={props.handleGuestUser}>Guest User</button>\n  </div>\n);\n\nexport default ModeSelect;\n","import React, { useState } from 'react';\nimport { STATES } from '../App/App'\n\nconst UserForm = (props) => {\n  const [userName, setUserName] = useState(\"\");\n  const [inputError, setInputError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleChange = (event) => {\n    // console.log(event);\n    setUserName(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    // console.log(event);\n    if (userName.trim() === \"\") {\n      setInputError(errorMessage);\n    } else {\n      setInputError(\"\");\n      const param = {username: userName};\n      fetch(\"https://api.cumaker.space/visit\", {\n        method:\"post\",\n        body:JSON.stringify(param)\n      }).then(response => {\n        if (response.ok) {\n          return response.json().then(data => ({status: response.status, body: data}))\n        } else {\n          throw new Error(\"Something went wrong.\");\n        }\n      }).then((obj) => {\n        // console.log(obj);\n        if (obj.status === 200) {\n          props.handleSignInMessage(true);\n        } else {\n          props.handleSignInMessage(false);\n        }\n      }).catch((error) => {\n          // console.log(error)\n          props.handleSignInMessage(false);\n        }\n      )\n      setIsLoading(true);\n    }\n    event.preventDefault()\n    setUserName(\"\");\n  }\n\n  let render;\n  let placeholder;\n  let errorMessage;\n  \n  if (props.mode === STATES[\"CLEMSON\"]) {\n    render = <h3 className=\"text-light\">Clemson User Login</h3>;\n    placeholder = \"Username\";\n    errorMessage = \"Please enter your username.\";\n  } else if (props.mode === STATES[\"GUEST\"]) {\n    render = <h3 className=\"text-light\">Guest User Login</h3>;\n    placeholder = \"Email Address\"\n    errorMessage = \"Please enter an email address.\"\n  }\n\n  if (!isLoading) {\n    return (\n      <div>\n        {render}\n        <form onSubmit={handleSubmit} className=\"\">\n          <div className=\"form-group mb-3\">\n            <input type={(props.mode === STATES[\"CLEMSON\"] ? \"text\" : \"email\")} \n            value={userName} \n            onChange={handleChange} \n            placeholder={placeholder}\n            className=\"form-control\"/>\n            <span className=\"form-text text-danger d-block\">{inputError}</span>\n          </div>\n          <div className=\"d-flex justify-content-start\">\n            <button type=\"submit\" className=\"btn btn-secondary mr-5\">Sign In</button>\n            <button className=\"btn btn-link text-light\" onClick={props.handleBack}>Cancel</button>\n          </div>\n        </form>\n        \n      </div>\n    );\n  } else {\n    return (\n      <h3 className=\"text-secondary\">\n          Loading...\n      </h3>\n    );\n  }\n};\n\nexport default UserForm;","import React from 'react';\nimport Countdown from 'react-countdown';\n\nconst SignInCountDown = (props) => {\n    const renderer = ({seconds}) => (\n        <div className=\"container p-3 text-center\">\n        <h3 className=\"text-light\">Sign-in {props.mode === 3 ? \"Successful\" : \"Failed\"}</h3>\n        <button className=\"btn btn-secondary\" onClick={props.handleBack}>Continue</button>\n        </div>\n      );\n\n    return (\n        <Countdown date={Date.now() + 10000} renderer={renderer} onComplete={props.handleBack} on />\n    );\n}\n \nexport default SignInCountDown;\n","import React, { useState } from 'react';\nimport ModeSelect from '../ModeSelect/ModeSelect'\nimport UserForm from '../UserForm/UserForm'\nimport SignInCountDown from '../SignInCountDown/SignInCountDown'\n\nexport const STATES = {\n  MAIN: 0,\n  CLEMSON: 1,\n  GUEST: 2,\n  SIGN_IN: 3,\n  FAILED_SIGN_IN: 4\n}\n\nconst App = () => {\n\n  const [appMode, setAppMode] = useState(STATES[\"MAIN\"])\n\n  const handleClemsonUser = () => {\n    // console.log(\"Clemson User\");\n    setAppMode(STATES[\"CLEMSON\"]);\n  }\n\n  const handleGuestUser = () => {\n    // console.log(\"Guest User\");\n    setAppMode(STATES[\"GUEST\"]);\n  }\n\n  const handleSignInMessage = (isIn) => {\n    isIn ? setAppMode(STATES[\"SIGN_IN\"]) : setAppMode(STATES[\"FAILED_SIGN_IN\"])\n  }\n\n  const handleBack = () => {\n    setAppMode(STATES[\"MAIN\"]);\n  }\n\n\n\n  let render;\n  if (appMode === STATES[\"MAIN\"]) {\n    render = (\n      <ModeSelect \n        handleClemsonUser={handleClemsonUser} \n        handleGuestUser={handleGuestUser}>\n      </ModeSelect>\n    )\n  } else if (appMode === STATES[\"CLEMSON\"]) {\n    render = (\n      <UserForm handleSignInMessage={handleSignInMessage}\n      handleBack={handleBack} mode={appMode}></UserForm>\n    )\n  } else if (appMode === STATES[\"GUEST\"]) {\n    render = (\n      <UserForm handleSignInMessage={handleSignInMessage}\n      handleBack={handleBack} mode={appMode}></UserForm>\n    )\n  } else if (appMode === STATES[\"SIGN_IN\"]) {\n    render = (\n      <SignInCountDown handleBack={handleBack} mode={appMode}></SignInCountDown>\n    )\n  } else if (appMode === STATES[\"FAILED_SIGN_IN\"]) {\n    render = (\n      <SignInCountDown handleBack={handleBack} mode={appMode}></SignInCountDown>\n    )\n  }\n\n  return (\n    <div className=\"container bg-primary p-5 rounded\" style={{height: \"400px\"}}>\n      <h1 className=\"text-secondary fw-bold mb-4 text-center\">Visit the Makerspace!</h1>\n      <div className=\"d-flex justify-content-center\">\n        {render}\n      </div>\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.scss';\nimport App from './components/App/App';\n\ndocument.body.className=\"bg-dark\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}